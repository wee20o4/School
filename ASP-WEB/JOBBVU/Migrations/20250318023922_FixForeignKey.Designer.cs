// <auto-generated />
using System;
using JOBBVU.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JOBBVU.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250318023922_FixForeignKey")]
    partial class FixForeignKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BangLuong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("LuongToiDa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LuongToiThieu")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BangLuongs");
                });

            modelBuilder.Entity("CongTy", b =>
                {
                    b.Property<int>("MaCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCT"));

                    b.Property<string>("LoaiHinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDiaChi")
                        .HasColumnType("int");

                    b.Property<int>("MaLienHe")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenCTY")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaCT");

                    b.HasIndex("MaDiaChi");

                    b.HasIndex("MaLienHe");

                    b.ToTable("CongTys");
                });

            modelBuilder.Entity("CongViec", b =>
                {
                    b.Property<int>("MaCV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCV"));

                    b.Property<DateTime>("HanNop")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaDiaChi")
                        .HasColumnType("int");

                    b.Property<int>("MaLuong")
                        .HasColumnType("int");

                    b.Property<int>("MaNTD")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YeuCau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaCV");

                    b.HasIndex("MaDiaChi");

                    b.HasIndex("MaLuong");

                    b.HasIndex("MaNTD");

                    b.ToTable("CongViecs");
                });

            modelBuilder.Entity("DiaChi", b =>
                {
                    b.Property<int>("MaDiaChi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDiaChi"));

                    b.Property<string>("ChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhThanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDiaChi");

                    b.ToTable("DiaChis");
                });

            modelBuilder.Entity("HoSoUngVien", b =>
                {
                    b.Property<int>("MaHoSo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoSo"));

                    b.Property<string>("BangCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinhNghiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KyNang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaLuong")
                        .HasColumnType("int");

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.HasKey("MaHoSo");

                    b.HasIndex("MaLuong");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("HoSoUngViens");
                });

            modelBuilder.Entity("LienHe", b =>
                {
                    b.Property<int>("MaLienHe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLienHe"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLienHe");

                    b.ToTable("LienHes");
                });

            modelBuilder.Entity("NguoiDung", b =>
                {
                    b.Property<int>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiDung"));

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LoaiNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaLienHe")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("MaLienHe");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("TuyenDung", b =>
                {
                    b.Property<int>("MaNTD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNTD"));

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaCongTy")
                        .HasColumnType("int");

                    b.Property<int>("MaLienHe")
                        .HasColumnType("int");

                    b.Property<string>("TrangThaiNTD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNTD");

                    b.HasIndex("MaCongTy");

                    b.HasIndex("MaLienHe");

                    b.ToTable("TuyenDungs");
                });

            modelBuilder.Entity("CongTy", b =>
                {
                    b.HasOne("DiaChi", "DiaChi")
                        .WithMany()
                        .HasForeignKey("MaDiaChi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LienHe", "LienHe")
                        .WithMany()
                        .HasForeignKey("MaLienHe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaChi");

                    b.Navigation("LienHe");
                });

            modelBuilder.Entity("CongViec", b =>
                {
                    b.HasOne("DiaChi", "DiaChi")
                        .WithMany()
                        .HasForeignKey("MaDiaChi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BangLuong", "BangLuong")
                        .WithMany()
                        .HasForeignKey("MaLuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuyenDung", "TuyenDung")
                        .WithMany()
                        .HasForeignKey("MaNTD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BangLuong");

                    b.Navigation("DiaChi");

                    b.Navigation("TuyenDung");
                });

            modelBuilder.Entity("HoSoUngVien", b =>
                {
                    b.HasOne("BangLuong", "BangLuong")
                        .WithMany()
                        .HasForeignKey("MaLuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BangLuong");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("NguoiDung", b =>
                {
                    b.HasOne("LienHe", "LienHe")
                        .WithMany()
                        .HasForeignKey("MaLienHe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LienHe");
                });

            modelBuilder.Entity("TuyenDung", b =>
                {
                    b.HasOne("CongTy", "CongTy")
                        .WithMany()
                        .HasForeignKey("MaCongTy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LienHe", "LienHe")
                        .WithMany()
                        .HasForeignKey("MaLienHe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongTy");

                    b.Navigation("LienHe");
                });
#pragma warning restore 612, 618
        }
    }
}
